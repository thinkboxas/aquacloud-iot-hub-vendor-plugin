# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
# Trigger version option of this file so circleci refreshes circleci build config
version: 2.1

executors:
  amd64: &amd64-executor
    machine:
      image: ubuntu-2204:2023.04.2
      docker_layer_caching: true
    resource_class: medium
  arm64: &arm64-executor
    machine:
      image: ubuntu-2204:2023.04.2
      docker_layer_caching: true
    resource_class: arm.medium
  armv7: &armv7-executor
    machine:
      image: ubuntu-2204:2023.04.2
      docker_layer_caching: true
    resource_class: arm.medium
    environment:
      DOCKER_BUILDKIT: 1
      BUILDX_PLATFORMS: linux/arm/v7

commands:
  deploy:
    parameters:
      version:
        type: string
      module-name:
        type: string
      architecture:
        type: executor
    steps:
      - run: git clone --depth 1 "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH$CIRCLE_TAG" .
      - run: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - when:
          condition:
            equal: [*amd64-executor, <<parameters.architecture>>]
          steps:
            - run: echo 'export CPU_ARCH="amd64"' >> "$BASH_ENV"
      - when:
          condition:
            equal: [*arm64-executor, <<parameters.architecture>>]
          steps:
            - run: echo 'export CPU_ARCH="arm64"' >> "$BASH_ENV"
      - when:
          condition:
            equal: [*armv7-executor, <<parameters.architecture>>]
          steps:
            - run: echo 'export CPU_ARCH="armv7"' >> "$BASH_ENV"
            - run: echo 'export ARMV7_PARAMETERS="--platform linux/arm/v7"' >> "$BASH_ENV"

      - when:
          condition: <<pipeline.git.tag>>
          steps:
            - run: docker build ${ARMV7_PARAMETERS} -t thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_TAG}-${CPU_ARCH} --build-arg BUILD_VERSION=${CIRCLE_TAG} .
            - run: docker tag thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_TAG}-${CPU_ARCH} thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CPU_ARCH}
      - unless:
          condition: <<pipeline.git.tag>>
          steps:
            - run: docker build ${ARMV7_PARAMETERS} -t thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_SHA1:0:7}-${CPU_ARCH} --build-arg BUILD_VERSION=${CIRCLE_SHA1:0:7} .
      - run: docker push thinkboxas/<<parameters.module-name>> --all-tags

  build-and-deploy-multiarch:
    parameters:
      version:
        type: string
      module-name:
        type: string
    steps:
      - run: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - when:
          condition: <<pipeline.git.tag>>
          steps:
            - run: docker manifest create thinkboxas/<<parameters.module-name>>:<<parameters.version>>-amd64 --amend thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_TAG}-amd64
            - run: docker manifest push thinkboxas/<<parameters.module-name>>:<<parameters.version>>-amd64
            - run: docker manifest create thinkboxas/<<parameters.module-name>>:<<parameters.version>>-arm64 --amend thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_TAG}-arm64
            - run: docker manifest push thinkboxas/<<parameters.module-name>>:<<parameters.version>>-arm64
            - run: docker manifest create thinkboxas/<<parameters.module-name>>:<<parameters.version>> --amend thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_TAG}-amd64 --amend thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_TAG}-arm64
            - run: docker manifest push thinkboxas/<<parameters.module-name>>:<<parameters.version>>
            - run: docker manifest create thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_TAG} --amend thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_TAG}-amd64 --amend thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_TAG}-arm64
            - run: docker manifest push thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_TAG}
      - unless:
          condition: <<pipeline.git.tag>>
          steps:
            - run: docker manifest create thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_SHA1:0:7} --amend thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_SHA1:0:7}-amd64 --amend thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_SHA1:0:7}-arm64
            - run: docker manifest push thinkboxas/<<parameters.module-name>>:<<parameters.version>>-${CIRCLE_SHA1:0:7}

jobs:
  deploy:
    parameters:
      version:
        type: string
      module-name:
        type: string
      architecture:
        type: executor
    executor: <<parameters.architecture>>
    steps:
      - deploy:
          version: <<parameters.version>>
          architecture: <<parameters.architecture>>
          module-name: <<parameters.module-name>>

  deploy-multiarch:
    parameters:
      version:
        type: string
      module-name:
        type: string
      architecture:
        type: executor
    executor: <<parameters.architecture>>
    steps:
      - build-and-deploy-multiarch:
          version: <<parameters.version>>
          module-name: <<parameters.module-name>>

workflows:
  deploy:
    jobs:
      - deploy:
          name: deploy-<<matrix.version>>-<<matrix.architecture>>
          matrix:
            parameters:
              version: ["v1"]
              module-name: ["aquacloud-iot-hub-vendor-plugin"]
              architecture: [amd64, arm64]
          filters:
            tags:
              only: /.*/

      - deploy-multiarch:
          name: deploy-multiarch-<<matrix.version>>
          matrix:
            parameters:
              version: ["v1"]
              module-name: ["aquacloud-iot-hub-vendor-plugin"]
              architecture: [amd64]
          filters:
            tags:
              only: /.*/
          requires:
            - deploy
